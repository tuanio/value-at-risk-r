plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", var_95)
var_99_label = paste("VaR", method, "99% CI:", var_99)
text_position = max(returns$returns, na.rm=TRUE)
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=2.5), colour="blue", angle=0, vjust = 1.2, size=4)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=2.5), colour="purple", angle=0, vjust = 1.2, size=4)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", var_95)
var_99_label = paste("VaR", method, "99% CI:", var_99)
text_position = max(returns$returns, na.rm=TRUE)
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=4), colour="blue", angle=0, vjust = 1.2, size=4)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=4), colour="purple", angle=0, vjust = 1.2, size=4)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", var_95)
var_99_label = paste("VaR", method, "99% CI:", var_99)
text_position = max(returns$returns, na.rm=TRUE)
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=4.5), colour="blue", angle=0, vjust = 1.2, size=4)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=4), colour="purple", angle=0, vjust = 1.2, size=4)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", round(var_95, 5))
var_99_label = paste("VaR", method, "99% CI:", round(var_99, 5))
text_position = max(returns$returns, na.rm=TRUE)
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=4.5), colour="blue", angle=0, vjust = 1.2, size=4)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=4), colour="purple", angle=0, vjust = 1.2, size=4)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", round(var_95, 5))
var_99_label = paste("VaR", method, "99% CI:", round(var_99, 5))
text_position = max(returns$returns, na.rm=TRUE)
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=4.5), colour="blue", angle=0, vjust = 1.2, size=5)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=4), colour="purple", angle=0, vjust = 1.2, size=5)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", round(var_95, 5))
var_99_label = paste("VaR", method, "99% CI:", round(var_99, 5))
text_position = 0.35
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=4.5), colour="blue", angle=0, vjust = 1.2, size=5)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=4), colour="purple", angle=0, vjust = 1.2, size=5)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
plot_hist <- function(var_95, var_99, method) {
title = paste("Phân phối tỉ suất lợi nhuận với VaR bằng phương pháp", method)
var_95_label = paste("VaR", method, "95% CI:", round(var_95, 5))
var_99_label = paste("VaR", method, "99% CI:", round(var_99, 5))
text_position = 0.2
return(
returns %>%
ggplot(aes(x = returns, y = ..density..)) +
geom_histogram(color = "black", fill = "cyan") +
# kernel density
geom_density(lwd = 0.75, linetype = 1, colour = "red", fill = "blue", alpha = 0.15) +
geom_vline(xintercept=var_95, color="blue", size=1) +
geom_text(aes(x=text_position, label=var_95_label, y=4.5), colour="blue", angle=0, vjust = 1.2, size=5)+
geom_vline(xintercept=var_99, color="purple", size=1) +
geom_text(aes(x=text_position, label=var_99_label, y=4), colour="purple", angle=0, vjust = 1.2, size=5)+
ggtitle(title) +
theme_minimal() +
theme(legend.position = "top")
)
}
## historial method
make_var <- function(method) {
var_method = switch(method, "Historical" = "historical",
"Parametric" = "gaussian",
"Monte Carlo" = "modified")
var_95 = VaR(R = returns$returns, p = 0.95, method = var_method)
var_99 = VaR(R = returns$returns, p = 0.99, method = var_method)
print(paste("VaR của phương pháp", method, "với 95% CI", var_95 * invested_value))
print(paste("VaR của phương pháp", method, "với 99% CI", var_99 * invested_value))
p <- plot_hist(var_historial_95,var_historial_99, method)
return (list("var_95" = var_95,
"var_99" = var_99,
"plot" = p))
}
# histogram
historical <- make_var("Historical")
historical$plot
parametric <- make_var("Parametric")
parametric$plot
monte_carlo <- make_var("Monte Carlo")
monte_carlo$plot
parametric <- make_var("Parametric")
parametric$plot
monte_carlo <- make_var("Monte Carlo")
monte_carlo$plot
View(var_historical_99)
install.packages("tidyquant")
install.packages("tidyverse")
tickers = c('TSLA')
invested_value = 1000000000 # 1 bilions
# get data
prices <- tq_get(tickers,
from = "2015-01-01",
to = "2022-05-13",
get = "stock.prices")
library(tidyquant)
library(tidyverse)
tickers = c('TSLA')
invested_value = 1000000000 # 1 bilions
# get data
prices <- tq_get(tickers,
from = "2015-01-01",
to = "2022-05-13",
get = "stock.prices")
prices
# plot data over time
prices %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size=2) +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price",
title = "Giá điều chỉnh của Apple, Facebook, Google, Nvidia, Tesla từ 2015 đến hiện tại") +
scale_y_continuous(breaks = seq(0,300,10)) +
theme(legend.position = "top")
# plot data over time
prices %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size=2) +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price",
title = "Giá điều chỉnh của Tesla từ 2015 đến hiện tại") +
scale_y_continuous(breaks = seq(0,300,10)) +
theme(legend.position = "top")
# chỉ lấy symbol, date, adjusted
adjusted <- prices %>%
select(c("symbol", "date", "adjusted")) %>%
spread(key="symbol", value="adjusted")
adjustetd
adjusted
logs
log
# calculate daily returns
returns <- adjusted %>%
select(c("date", "returns")) %>%
mutate(returns = log(returns / lead(returns)))
# calculate daily returns
returns <- adjusted %>%
select(c("date", "adjusted")) %>%
mutate(returns = log(adjusted / lead(adjusted)))
adjusted
# calculate daily returns
returns <- adjusted %>%
select(c("date", "TSLA")) %>%
mutate(returns = log(TSLA / lead(TSLA)))
adjusted
returns
vol = returns['returns']
vol <- std(returns['returns'])
std
vol <- sd(returns['returns'])
returns['returns']
returns['returns'].sd())
returns['returns'].sd()=
returns['returns'].sd()
returns['returns'].sd
std(returns['returns'])
sd(returns['returns'])
sd(returns['returns'].asnumeric())
sd(returns['returns'].as_numeric())
returns$returns
vol <- sd(returns$returns)
vol
vol <- sd(returns$returns)
returns$returns
returns$returns.isNa()
is.na(returns$returns)
sum(is.na(returns$returns))
sum(is.na(returns$returns))
drop_na(returns)
vol <- sd(returns$returns)
# tính volatility
vol <- sd(returns$returns)
vol
# get data
prices <- tq_get(tickers,
from = "2015-01-01",
to = "2022-05-13",
get = "stock.prices")
# plot data over time
prices %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size=2) +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price",
title = "Giá điều chỉnh của Tesla từ 2015 đến hiện tại") +
scale_y_continuous(breaks = seq(0,300,10)) +
theme(legend.position = "top")
# chỉ lấy symbol, date, adjusted
adjusted <- prices %>%
select(c("symbol", "date", "adjusted")) %>%
spread(key="symbol", value="adjusted")
# calculate daily returns
returns <- adjusted %>%
select(c("date", "TSLA")) %>%
mutate(returns = log(TSLA / lead(TSLA)))
# loại bỏ giá trị bị mất
returns <- dropna(returns)
# loại bỏ giá trị bị mất
returns <- drop_na(returns)
# tính volatility
vol <- sd(returns$returns)
vol
CI = 0.95
ppf(.95)
ppf
pnorm()
pnorm(.95)
pnorm(1 - .95)
qnorm()
qnorm(.95)
sqrtt
sqrt
time <- sqrt(100)
CI <- 0.95
time
VaR = vol * CI * time
VaR <- vol * CI * time
VaR
vol
print(paste("Value at Risk of TSLA is", var * 100, "%"))
var
print(paste("Value at Risk of TSLA is", VaR * 100, "%"))
print(paste("Value at Risk of TSLA is", round(VaR * 100, 2), "%"))
# tính volatility
vol <- sd(returns$returns)
time <- sqrt(1)
CI <- qnorm(0.95)
VaR <- vol * CI * time
VaR
print(paste("Value at Risk of TSLA is", round(VaR * 100, 2), "%"))
for i in 1:10 {
print(i)
}
for i in 1:10:
print(i)
list_VaR = list()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, VaR_local)
}
list_VaR
ggplot(list_VaR)
data.frame(list_VaR)
list_VaR <- data.frame(list_VaR)
ggplot(list_VaR) %%
geom_line()
list_VaR = c()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, VaR_local)
}
list_VaR <- data.frame(list_VaR)
list_VaR
ggplot(data=list_VaR) %%
geom_line(aes(x=list_VaR))
ggplot(data=list_VaR) +
geom_line(aes(x=list_VaR))
ggplot(data=list_VaR) +
geom_line(aes(y=list_VaR))
list_VaR = c()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list(time=time, VaR=list_VaR), VaR_local)
}
list_VaR
list_VaR = c()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, list(time=time, VaR=VaR_local))
}
list_VaR
list_VaR <- data.frame(list_VaR)
list_VaR
list_VaR = list()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, list(time=time, VaR=VaR_local))
}
list_VaR
list_VaR = c()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, c(time, VaR_local))
}
list_VaR
append
list_VaR = c()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, VaR_local)
}
list_VaR
list_VaR <- data.frame(list(time=1:100, list_VaR))
list_Var
list_VaR
list_VaR = c()
for (time in 1:100) {
VaR_local <- vol * CI * sqrt(time)
list_VaR <- append(list_VaR, VaR_local)
}
list_VaR
list_VaR <- data.frame(list(time=1:100, VaR=list_VaR))
list_VaR
ggplot(data=list_VaR) +
geom_line(aes(x=time, y=VaR))
ggplot(data=list_VaR) +
geom_line(aes(x=time, y=VaR), size=2)
ggplot(data=list_VaR) +
geom_line(aes(x=time, y=VaR), size=1)
ggplot(data=list_VaR) +
geom_line(aes(x=time, y=VaR), size=1) +
theme_classic() +
labs(x = 'Time',
y = "VaR",
title = "Value at Risk theo các khoảng thời gian")
ggplot(data=list_VaR) +
geom_line(aes(x=time, y=VaR), size=2) +
theme_classic() +
labs(x = 'Time',
y = "VaR",
title = "Value at Risk theo các khoảng thời gian")
ggplot(data=list_VaR) +
geom_line(aes(x=time, y=VaR), size=2) +
theme_classic() +
labs(x = 'Time',
y = "VaR",
title = "Value at Risk theo các khoảng thời gian")
